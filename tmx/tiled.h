/* tiled.h generated by valac 0.32.0, the Vala compiler, do not modify */


#ifndef __TILED_H__
#define __TILED_H__

#include <glib.h>
#include <gxml/gxml.h>
#include <stdlib.h>
#include <string.h>
#include <SDL2/SDL_rect.h>
#include <float.h>
#include <math.h>

G_BEGIN_DECLS


#define TILED_TYPE_DATA (tiled_data_get_type ())
#define TILED_DATA(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TILED_TYPE_DATA, TiledData))
#define TILED_DATA_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TILED_TYPE_DATA, TiledDataClass))
#define TILED_IS_DATA(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TILED_TYPE_DATA))
#define TILED_IS_DATA_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TILED_TYPE_DATA))
#define TILED_DATA_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TILED_TYPE_DATA, TiledDataClass))

typedef struct _TiledData TiledData;
typedef struct _TiledDataClass TiledDataClass;
typedef struct _TiledDataPrivate TiledDataPrivate;

#define TILED_TYPE_TILE (tiled_tile_get_type ())
#define TILED_TILE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TILED_TYPE_TILE, TiledTile))
#define TILED_TILE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TILED_TYPE_TILE, TiledTileClass))
#define TILED_IS_TILE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TILED_TYPE_TILE))
#define TILED_IS_TILE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TILED_TYPE_TILE))
#define TILED_TILE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TILED_TYPE_TILE, TiledTileClass))

typedef struct _TiledTile TiledTile;
typedef struct _TiledTileClass TiledTileClass;

#define TILED_TYPE_IMAGE (tiled_image_get_type ())
#define TILED_IMAGE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TILED_TYPE_IMAGE, TiledImage))
#define TILED_IMAGE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TILED_TYPE_IMAGE, TiledImageClass))
#define TILED_IS_IMAGE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TILED_TYPE_IMAGE))
#define TILED_IS_IMAGE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TILED_TYPE_IMAGE))
#define TILED_IMAGE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TILED_TYPE_IMAGE, TiledImageClass))

typedef struct _TiledImage TiledImage;
typedef struct _TiledImageClass TiledImageClass;
typedef struct _TiledImagePrivate TiledImagePrivate;

#define TILED_TYPE_LAYER (tiled_layer_get_type ())
#define TILED_LAYER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TILED_TYPE_LAYER, TiledLayer))
#define TILED_LAYER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TILED_TYPE_LAYER, TiledLayerClass))
#define TILED_IS_LAYER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TILED_TYPE_LAYER))
#define TILED_IS_LAYER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TILED_TYPE_LAYER))
#define TILED_LAYER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TILED_TYPE_LAYER, TiledLayerClass))

typedef struct _TiledLayer TiledLayer;
typedef struct _TiledLayerClass TiledLayerClass;
typedef struct _TiledLayerPrivate TiledLayerPrivate;

#define TILED_TYPE_MAP (tiled_map_get_type ())
#define TILED_MAP(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TILED_TYPE_MAP, TiledMap))
#define TILED_MAP_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TILED_TYPE_MAP, TiledMapClass))
#define TILED_IS_MAP(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TILED_TYPE_MAP))
#define TILED_IS_MAP_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TILED_TYPE_MAP))
#define TILED_MAP_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TILED_TYPE_MAP, TiledMapClass))

typedef struct _TiledMap TiledMap;
typedef struct _TiledMapClass TiledMapClass;
typedef struct _TiledMapPrivate TiledMapPrivate;

#define TILED_MAP_TYPE_ORIENTATION (tiled_map_orientation_get_type ())

#define TILED_TYPE_TILESET (tiled_tileset_get_type ())
#define TILED_TILESET(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TILED_TYPE_TILESET, TiledTileset))
#define TILED_TILESET_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TILED_TYPE_TILESET, TiledTilesetClass))
#define TILED_IS_TILESET(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TILED_TYPE_TILESET))
#define TILED_IS_TILESET_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TILED_TYPE_TILESET))
#define TILED_TILESET_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TILED_TYPE_TILESET, TiledTilesetClass))

typedef struct _TiledTileset TiledTileset;
typedef struct _TiledTilesetClass TiledTilesetClass;

#define TILED_TYPE_OBJECTGROUP (tiled_objectgroup_get_type ())
#define TILED_OBJECTGROUP(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TILED_TYPE_OBJECTGROUP, TiledObjectgroup))
#define TILED_OBJECTGROUP_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TILED_TYPE_OBJECTGROUP, TiledObjectgroupClass))
#define TILED_IS_OBJECTGROUP(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TILED_TYPE_OBJECTGROUP))
#define TILED_IS_OBJECTGROUP_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TILED_TYPE_OBJECTGROUP))
#define TILED_OBJECTGROUP_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TILED_TYPE_OBJECTGROUP, TiledObjectgroupClass))

typedef struct _TiledObjectgroup TiledObjectgroup;
typedef struct _TiledObjectgroupClass TiledObjectgroupClass;

#define TILED_TYPE_OBJECT (tiled_object_get_type ())
#define TILED_OBJECT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TILED_TYPE_OBJECT, TiledObject))
#define TILED_OBJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TILED_TYPE_OBJECT, TiledObjectClass))
#define TILED_IS_OBJECT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TILED_TYPE_OBJECT))
#define TILED_IS_OBJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TILED_TYPE_OBJECT))
#define TILED_OBJECT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TILED_TYPE_OBJECT, TiledObjectClass))

typedef struct _TiledObject TiledObject;
typedef struct _TiledObjectClass TiledObjectClass;
typedef struct _TiledObjectPrivate TiledObjectPrivate;
typedef struct _TiledObjectgroupPrivate TiledObjectgroupPrivate;
typedef struct _TiledTilePrivate TiledTilePrivate;
typedef struct _TiledTilesetPrivate TiledTilesetPrivate;

struct _TiledData {
	GXmlSerializableObjectModel parent_instance;
	TiledDataPrivate * priv;
};

struct _TiledDataClass {
	GXmlSerializableObjectModelClass parent_class;
};

struct _TiledImage {
	GXmlSerializableObjectModel parent_instance;
	TiledImagePrivate * priv;
};

struct _TiledImageClass {
	GXmlSerializableObjectModelClass parent_class;
};

struct _TiledLayer {
	GXmlSerializableObjectModel parent_instance;
	TiledLayerPrivate * priv;
};

struct _TiledLayerClass {
	GXmlSerializableObjectModelClass parent_class;
};

struct _TiledMap {
	GXmlSerializableObjectModel parent_instance;
	TiledMapPrivate * priv;
};

struct _TiledMapClass {
	GXmlSerializableObjectModelClass parent_class;
};

typedef enum  {
	TILED_MAP_ORIENTATION_ORTHOGONAL,
	TILED_MAP_ORIENTATION_ISOMETRIC,
	TILED_MAP_ORIENTATION_STAGGERED,
	TILED_MAP_ORIENTATION_HEXAGONAL
} TiledMapOrientation;

struct _TiledObject {
	GXmlSerializableObjectModel parent_instance;
	TiledObjectPrivate * priv;
};

struct _TiledObjectClass {
	GXmlSerializableObjectModelClass parent_class;
};

struct _TiledObjectgroup {
	GXmlSerializableObjectModel parent_instance;
	TiledObjectgroupPrivate * priv;
};

struct _TiledObjectgroupClass {
	GXmlSerializableObjectModelClass parent_class;
};

struct _TiledTile {
	GXmlSerializableObjectModel parent_instance;
	TiledTilePrivate * priv;
};

struct _TiledTileClass {
	GXmlSerializableObjectModelClass parent_class;
};

struct _TiledTileset {
	GXmlSerializableObjectModel parent_instance;
	TiledTilesetPrivate * priv;
};

struct _TiledTilesetClass {
	GXmlSerializableObjectModelClass parent_class;
};


GType tiled_data_get_type (void) G_GNUC_CONST;
TiledData* tiled_data_new (void);
TiledData* tiled_data_construct (GType object_type);
GType tiled_tile_get_type (void) G_GNUC_CONST;
GXmlSerializableArrayList* tiled_data_get_tiles (TiledData* self);
void tiled_data_set_tiles (TiledData* self, GXmlSerializableArrayList* value);
GType tiled_image_get_type (void) G_GNUC_CONST;
TiledImage* tiled_image_new (void);
TiledImage* tiled_image_construct (GType object_type);
const gchar* tiled_image_get_source (TiledImage* self);
void tiled_image_set_source (TiledImage* self, const gchar* value);
gint tiled_image_get_width (TiledImage* self);
void tiled_image_set_width (TiledImage* self, gint value);
gint tiled_image_get_height (TiledImage* self);
void tiled_image_set_height (TiledImage* self, gint value);
GType tiled_layer_get_type (void) G_GNUC_CONST;
TiledLayer* tiled_layer_new (void);
TiledLayer* tiled_layer_construct (GType object_type);
const gchar* tiled_layer_get_name (TiledLayer* self);
void tiled_layer_set_name (TiledLayer* self, const gchar* value);
gint tiled_layer_get_width (TiledLayer* self);
void tiled_layer_set_width (TiledLayer* self, gint value);
gint tiled_layer_get_height (TiledLayer* self);
void tiled_layer_set_height (TiledLayer* self, gint value);
TiledData* tiled_layer_get_data (TiledLayer* self);
void tiled_layer_set_data (TiledLayer* self, TiledData* value);
GType tiled_map_get_type (void) G_GNUC_CONST;
GType tiled_map_orientation_get_type (void) G_GNUC_CONST;
gboolean tiled_map_collidesHorizontal (TiledMap* self, SDL_Rect* box);
gboolean tiled_map_collidesWith (TiledMap* self, SDL_Rect* box);
TiledTile* tiled_map_getTileAt (TiledMap* self, gint x, gint y);
TiledMap* tiled_map_new (void);
TiledMap* tiled_map_construct (GType object_type);
const gchar* tiled_map_get_version (TiledMap* self);
void tiled_map_set_version (TiledMap* self, const gchar* value);
TiledMapOrientation tiled_map_get_orientation (TiledMap* self);
void tiled_map_set_orientation (TiledMap* self, TiledMapOrientation value);
const gchar* tiled_map_get_renderorder (TiledMap* self);
void tiled_map_set_renderorder (TiledMap* self, const gchar* value);
gint tiled_map_get_width (TiledMap* self);
void tiled_map_set_width (TiledMap* self, gint value);
gint tiled_map_get_height (TiledMap* self);
void tiled_map_set_height (TiledMap* self, gint value);
gint tiled_map_get_tilewidth (TiledMap* self);
void tiled_map_set_tilewidth (TiledMap* self, gint value);
gint tiled_map_get_tileheight (TiledMap* self);
void tiled_map_set_tileheight (TiledMap* self, gint value);
GType tiled_tileset_get_type (void) G_GNUC_CONST;
GXmlSerializableArrayList* tiled_map_get_tileset (TiledMap* self);
void tiled_map_set_tileset (TiledMap* self, GXmlSerializableArrayList* value);
GXmlSerializableArrayList* tiled_map_get_layer (TiledMap* self);
void tiled_map_set_layer (TiledMap* self, GXmlSerializableArrayList* value);
GType tiled_objectgroup_get_type (void) G_GNUC_CONST;
GXmlSerializableArrayList* tiled_map_get_objectgroup (TiledMap* self);
void tiled_map_set_objectgroup (TiledMap* self, GXmlSerializableArrayList* value);
GType tiled_object_get_type (void) G_GNUC_CONST;
TiledObject* tiled_object_new (void);
TiledObject* tiled_object_construct (GType object_type);
gint tiled_object_get_id (TiledObject* self);
void tiled_object_set_id (TiledObject* self, gint value);
const gchar* tiled_object_get_name (TiledObject* self);
void tiled_object_set_name (TiledObject* self, const gchar* value);
gdouble tiled_object_get_x (TiledObject* self);
void tiled_object_set_x (TiledObject* self, gdouble value);
gdouble tiled_object_get_y (TiledObject* self);
void tiled_object_set_y (TiledObject* self, gdouble value);
gdouble tiled_object_get_width (TiledObject* self);
void tiled_object_set_width (TiledObject* self, gdouble value);
gdouble tiled_object_get_height (TiledObject* self);
void tiled_object_set_height (TiledObject* self, gdouble value);
void tiled_objectgroup_show (TiledObjectgroup* self);
TiledObjectgroup* tiled_objectgroup_new (void);
TiledObjectgroup* tiled_objectgroup_construct (GType object_type);
const gchar* tiled_objectgroup_get_name (TiledObjectgroup* self);
void tiled_objectgroup_set_name (TiledObjectgroup* self, const gchar* value);
GXmlSerializableArrayList* tiled_objectgroup_get_objects (TiledObjectgroup* self);
void tiled_objectgroup_set_objects (TiledObjectgroup* self, GXmlSerializableArrayList* value);
TiledTile* tiled_tile_new (void);
TiledTile* tiled_tile_construct (GType object_type);
gint tiled_tile_get_gid (TiledTile* self);
void tiled_tile_set_gid (TiledTile* self, gint value);
TiledMap* tiled_loadMap (const gchar* filename);
TiledTileset* tiled_tileset_new (void);
TiledTileset* tiled_tileset_construct (GType object_type);
const gchar* tiled_tileset_get_name (TiledTileset* self);
void tiled_tileset_set_name (TiledTileset* self, const gchar* value);
gint tiled_tileset_get_tilewidth (TiledTileset* self);
void tiled_tileset_set_tilewidth (TiledTileset* self, gint value);
gint tiled_tileset_get_tileheight (TiledTileset* self);
void tiled_tileset_set_tileheight (TiledTileset* self, gint value);
gint tiled_tileset_get_tilecount (TiledTileset* self);
void tiled_tileset_set_tilecount (TiledTileset* self, gint value);
gint tiled_tileset_get_columns (TiledTileset* self);
void tiled_tileset_set_columns (TiledTileset* self, gint value);
TiledImage* tiled_tileset_get_image (TiledTileset* self);
void tiled_tileset_set_image (TiledTileset* self, TiledImage* value);


G_END_DECLS

#endif
